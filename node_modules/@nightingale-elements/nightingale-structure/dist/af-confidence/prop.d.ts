/**
 * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author David Sehnal <david.sehnal@gmail.com>
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
import { Column } from "molstar/lib/mol-data/db";
import { Model, IndexedCustomProperty } from "molstar/lib/mol-model/structure";
import { StructureElement, Structure } from "molstar/lib/mol-model/structure/structure";
import { ParamDefinition as PD } from "molstar/lib/mol-util/param-definition";
import { PropertyWrapper } from "molstar/lib/mol-model-props/common/wrapper";
import { CustomProperty } from "molstar/lib/mol-model-props/common/custom-property";
import { CustomModelProperty } from "molstar/lib/mol-model-props/common/custom-model-property";
export { AfConfidence };
type AfConfidence = PropertyWrapper<{
    score: IndexedCustomProperty.Residue<[number, string]>;
    category: string[];
} | undefined>;
export declare const DefaultServerUrl = "";
export declare const isApplicable: (model?: Model) => boolean;
export interface Info {
    timestamp_utc: string;
}
export declare const Schema: {
    local_metric_values: {
        label_asym_id: Column.Schema.Str;
        label_comp_id: Column.Schema.Str;
        label_seq_id: Column.Schema.Int;
        metric_id: Column.Schema.Int;
        metric_value: Column.Schema.Float;
        model_id: Column.Schema.Int;
        ordinal_id: Column.Schema.Int;
    };
};
export type Schema = typeof Schema;
export declare function fromCifOrServer(ctx: CustomProperty.Context, model: Model, props: AfConfidenceProps): Promise<any>;
export declare function getConfidenceScore(e: StructureElement.Location): (string | number)[];
export declare function getCategories(structure?: Structure): string[];
declare const AfConfidenceParams: {
    serverUrl: PD.Text<string>;
};
export type AfConfidenceParams = typeof AfConfidenceParams;
export type AfConfidenceProps = PD.Values<AfConfidenceParams>;
export declare const AfConfidenceProvider: CustomModelProperty.Provider<AfConfidenceParams, AfConfidence>;
//# sourceMappingURL=prop.d.ts.map