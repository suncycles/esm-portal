"use strict";
/**
 * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrincipalAxes = exports.toPositionsArray = void 0;
var principal_axes_1 = require("../../../../mol-math/linear-algebra/matrix/principal-axes");
var linear_algebra_1 = require("../../../../mol-math/linear-algebra");
var tempPos = linear_algebra_1.Vec3.zero();
function toPositionsArray(unit) {
    var pos = unit.conformation.invariantPosition;
    var elements = unit.elements;
    var positions = new Float32Array(elements.length * 3);
    for (var i = 0, il = elements.length; i < il; i++) {
        pos(elements[i], tempPos);
        linear_algebra_1.Vec3.toArray(tempPos, positions, i * 3);
    }
    return positions;
}
exports.toPositionsArray = toPositionsArray;
function getPrincipalAxes(unit) {
    var positions = toPositionsArray(unit);
    return principal_axes_1.PrincipalAxes.ofPositions(positions);
}
exports.getPrincipalAxes = getPrincipalAxes;
