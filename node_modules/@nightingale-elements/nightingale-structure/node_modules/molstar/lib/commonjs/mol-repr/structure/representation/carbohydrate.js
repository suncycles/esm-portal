"use strict";
/**
 * Copyright (c) 2018-2022 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CarbohydrateRepresentationProvider = exports.CarbohydrateRepresentation = exports.getCarbohydrateParams = exports.CarbohydrateParams = void 0;
var tslib_1 = require("tslib");
var base_1 = require("../../../mol-geo/geometry/base");
var structure_1 = require("../../../mol-model/structure");
var representation_1 = require("../../../mol-repr/representation");
var param_definition_1 = require("../../../mol-util/param-definition");
var complex_representation_1 = require("../complex-representation");
var representation_2 = require("../representation");
var carbohydrate_link_cylinder_1 = require("../visual/carbohydrate-link-cylinder");
var carbohydrate_symbol_mesh_1 = require("../visual/carbohydrate-symbol-mesh");
var carbohydrate_terminal_link_cylinder_1 = require("../visual/carbohydrate-terminal-link-cylinder");
var CarbohydrateVisuals = {
    'carbohydrate-symbol': function (ctx, getParams) { return (0, complex_representation_1.ComplexRepresentation)('Carbohydrate symbol mesh', ctx, getParams, carbohydrate_symbol_mesh_1.CarbohydrateSymbolVisual); },
    'carbohydrate-link': function (ctx, getParams) { return (0, complex_representation_1.ComplexRepresentation)('Carbohydrate link cylinder', ctx, getParams, carbohydrate_link_cylinder_1.CarbohydrateLinkVisual); },
    'carbohydrate-terminal-link': function (ctx, getParams) { return (0, complex_representation_1.ComplexRepresentation)('Carbohydrate terminal link cylinder', ctx, getParams, carbohydrate_terminal_link_cylinder_1.CarbohydrateTerminalLinkVisual); },
};
exports.CarbohydrateParams = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, carbohydrate_symbol_mesh_1.CarbohydrateSymbolParams), carbohydrate_link_cylinder_1.CarbohydrateLinkParams), carbohydrate_terminal_link_cylinder_1.CarbohydrateTerminalLinkParams), { visuals: param_definition_1.ParamDefinition.MultiSelect(['carbohydrate-symbol', 'carbohydrate-link', 'carbohydrate-terminal-link'], param_definition_1.ParamDefinition.objectToOptions(CarbohydrateVisuals)), bumpFrequency: param_definition_1.ParamDefinition.Numeric(0, { min: 0, max: 10, step: 0.1 }, base_1.BaseGeometry.ShadingCategory) });
function getCarbohydrateParams(ctx, structure) {
    return exports.CarbohydrateParams;
}
exports.getCarbohydrateParams = getCarbohydrateParams;
function CarbohydrateRepresentation(ctx, getParams) {
    return representation_1.Representation.createMulti('Carbohydrate', ctx, getParams, representation_2.StructureRepresentationStateBuilder, CarbohydrateVisuals);
}
exports.CarbohydrateRepresentation = CarbohydrateRepresentation;
exports.CarbohydrateRepresentationProvider = (0, representation_2.StructureRepresentationProvider)({
    name: 'carbohydrate',
    label: 'Carbohydrate',
    description: 'Displays carbohydrate symbols (3D SNFG).',
    factory: CarbohydrateRepresentation,
    getParams: getCarbohydrateParams,
    defaultValues: param_definition_1.ParamDefinition.getDefaultValues(exports.CarbohydrateParams),
    defaultColorTheme: { name: 'carbohydrate-symbol' },
    defaultSizeTheme: { name: 'uniform' },
    isApplicable: function (structure) {
        return structure.models.some(function (m) { return structure_1.Model.hasCarbohydrate(m); });
    }
});
