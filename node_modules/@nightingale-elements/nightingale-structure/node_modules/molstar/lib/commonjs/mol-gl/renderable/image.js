"use strict";
/**
 * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageRenderable = exports.ImageSchema = void 0;
var tslib_1 = require("tslib");
var renderable_1 = require("../renderable");
var render_item_1 = require("../webgl/render-item");
var schema_1 = require("./schema");
var shader_code_1 = require("../shader-code");
var mol_util_1 = require("../../mol-util");
var image_1 = require("../../mol-geo/geometry/image/image");
exports.ImageSchema = tslib_1.__assign(tslib_1.__assign({}, schema_1.BaseSchema), { aGroup: (0, schema_1.AttributeSpec)('float32', 1, 0), aPosition: (0, schema_1.AttributeSpec)('float32', 3, 0), aUv: (0, schema_1.AttributeSpec)('float32', 2, 0), elements: (0, schema_1.ElementsSpec)('uint32'), uImageTexDim: (0, schema_1.UniformSpec)('v2'), tImageTex: (0, schema_1.TextureSpec)('image-uint8', 'rgba', 'ubyte', 'nearest'), tGroupTex: (0, schema_1.TextureSpec)('image-uint8', 'rgba', 'ubyte', 'nearest'), dInterpolation: (0, schema_1.DefineSpec)('string', image_1.InterpolationTypeNames) });
function ImageRenderable(ctx, id, values, state, materialId, variants) {
    var schema = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, schema_1.GlobalUniformSchema), schema_1.GlobalTextureSchema), schema_1.InternalSchema), exports.ImageSchema);
    var internalValues = {
        uObjectId: mol_util_1.ValueCell.create(id),
    };
    var shaderCode = shader_code_1.ImageShaderCode;
    var renderItem = (0, render_item_1.createGraphicsRenderItem)(ctx, 'triangles', shaderCode, schema, tslib_1.__assign(tslib_1.__assign({}, values), internalValues), materialId, variants);
    return (0, renderable_1.createRenderable)(renderItem, values, state);
}
exports.ImageRenderable = ImageRenderable;
