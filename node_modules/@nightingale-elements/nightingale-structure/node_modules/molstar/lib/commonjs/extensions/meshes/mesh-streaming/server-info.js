"use strict";
/**
 * Copyright (c) 2018-2022 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Adam Midlik <midlik@gmail.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MeshServerInfo = exports.DEFAULT_MESH_SERVER = void 0;
var tslib_1 = require("tslib");
var objects_1 = require("../../../mol-plugin-state/objects");
var param_definition_1 = require("../../../mol-util/param-definition");
var helpers_1 = require("../../volumes-and-segmentations/helpers");
exports.DEFAULT_MESH_SERVER = 'http://localhost:9000/v2';
var MeshServerInfo = /** @class */ (function (_super) {
    tslib_1.__extends(MeshServerInfo, _super);
    function MeshServerInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MeshServerInfo;
}(objects_1.PluginStateObject.Create({ name: 'Volume Server', typeClass: 'Object' })));
exports.MeshServerInfo = MeshServerInfo;
(function (MeshServerInfo) {
    MeshServerInfo.MeshSourceChoice = new helpers_1.Choice({ empiar: 'EMPIAR', emdb: 'EMDB' }, 'empiar');
    MeshServerInfo.Params = {
        serverUrl: param_definition_1.ParamDefinition.Text(exports.DEFAULT_MESH_SERVER),
        source: MeshServerInfo.MeshSourceChoice.PDSelect(),
        entryId: param_definition_1.ParamDefinition.Text(''),
    };
})(MeshServerInfo = exports.MeshServerInfo || (exports.MeshServerInfo = {}));
exports.MeshServerInfo = MeshServerInfo;
