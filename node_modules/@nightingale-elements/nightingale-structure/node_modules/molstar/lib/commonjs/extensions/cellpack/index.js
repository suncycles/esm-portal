"use strict";
/**
 * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CellPack = void 0;
var tslib_1 = require("tslib");
var behavior_1 = require("../../mol-plugin/behavior");
var model_1 = require("./model");
var generate_1 = require("./color/generate");
var provided_1 = require("./color/provided");
exports.CellPack = behavior_1.PluginBehavior.create({
    name: 'cellpack',
    category: 'custom-props',
    display: {
        name: 'CellPack',
        description: 'CellPack Model Loading and Viewing.'
    },
    ctor: /** @class */ (function (_super) {
        tslib_1.__extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.register = function () {
            this.ctx.state.data.actions.add(model_1.LoadCellPackModel);
            this.ctx.representation.structure.themes.colorThemeRegistry.add(generate_1.CellPackGenerateColorThemeProvider);
            this.ctx.representation.structure.themes.colorThemeRegistry.add(provided_1.CellPackProvidedColorThemeProvider);
        };
        class_1.prototype.unregister = function () {
            this.ctx.state.data.actions.remove(model_1.LoadCellPackModel);
            this.ctx.representation.structure.themes.colorThemeRegistry.remove(generate_1.CellPackGenerateColorThemeProvider);
            this.ctx.representation.structure.themes.colorThemeRegistry.remove(provided_1.CellPackProvidedColorThemeProvider);
        };
        return class_1;
    }(behavior_1.PluginBehavior.Handler))
});
