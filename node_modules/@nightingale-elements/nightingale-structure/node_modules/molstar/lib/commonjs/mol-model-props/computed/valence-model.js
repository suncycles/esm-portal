"use strict";
/**
 * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValenceModelProvider = exports.ValenceModelParams = void 0;
var tslib_1 = require("tslib");
var param_definition_1 = require("../../mol-util/param-definition");
var valence_model_1 = require("./chemistry/valence-model");
var custom_structure_property_1 = require("../common/custom-structure-property");
var custom_property_1 = require("../../mol-model/custom-property");
exports.ValenceModelParams = tslib_1.__assign({}, valence_model_1.ValenceModelParams);
exports.ValenceModelProvider = custom_structure_property_1.CustomStructureProperty.createProvider({
    label: 'Valence Model',
    descriptor: (0, custom_property_1.CustomPropertyDescriptor)({
        name: 'molstar_computed_valence_model',
        // TODO `cifExport` and `symbol`
    }),
    type: 'local',
    defaultParams: exports.ValenceModelParams,
    getParams: function (data) { return exports.ValenceModelParams; },
    isApplicable: function (data) { return true; },
    obtain: function (ctx, data, props) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var p;
        var _a;
        return tslib_1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    p = tslib_1.__assign(tslib_1.__assign({}, param_definition_1.ParamDefinition.getDefaultValues(exports.ValenceModelParams)), props);
                    _a = {};
                    return [4 /*yield*/, (0, valence_model_1.calcValenceModel)(ctx.runtime, data, p)];
                case 1: return [2 /*return*/, (_a.value = _b.sent(), _a)];
            }
        });
    }); }
});
