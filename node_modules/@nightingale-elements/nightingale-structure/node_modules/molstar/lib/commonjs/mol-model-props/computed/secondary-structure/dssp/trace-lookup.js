"use strict";
/**
 * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.calcUnitProteinTraceLookup3D = void 0;
var geometry_1 = require("../../../../mol-math/geometry");
var int_1 = require("../../../../mol-data/int");
var boundary_1 = require("../../../../mol-math/geometry/boundary");
function calcUnitProteinTraceLookup3D(unit, unitProteinResidues) {
    var _a = unit.model.atomicConformation, x = _a.x, y = _a.y, z = _a.z;
    var traceElementIndex = unit.model.atomicHierarchy.derived.residue.traceElementIndex;
    var indices = new Uint32Array(unitProteinResidues.length);
    for (var i = 0, il = unitProteinResidues.length; i < il; ++i) {
        indices[i] = traceElementIndex[unitProteinResidues[i]];
    }
    var position = { x: x, y: y, z: z, indices: int_1.SortedArray.ofSortedArray(indices) };
    return (0, geometry_1.GridLookup3D)(position, (0, boundary_1.getBoundary)(position));
}
exports.calcUnitProteinTraceLookup3D = calcUnitProteinTraceLookup3D;
